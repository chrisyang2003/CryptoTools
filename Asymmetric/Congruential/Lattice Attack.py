from Crypto.Util.number import *
e = 80955738390761412250201802333175414472369901373754264191971483635238036824592778384831048743037836744185533964441044122305743198524619834011567315729985670181569969683095910712227456785283002613123450740666247216950021812608382072436606369026634374811861085876388442212173164531786147736849435892539143180694
q = 142783869916724119434386683543881135992272176957165711724854830710790877865945124985665993088573941592539978134384904681929999004051542977887299728574277053813011777033359578002582336620817821448353061864274914689992237231820219797688245978551129664084442642028322827282738450885878242646721684027794164033937
h = 56154657459127252949135468004943362987812475885946316851725045259213539593796664868646920074059912375890996000774717690893770917458538667002568914611986001547722896520673928067754860582176541794511200691306503966807548851341492852570477474272201490794131235023753971311626511783702438212246303704691367394146

v1 = [1, h]
v2 = [0, q]
m = matrix(ZZ, [v1, v2])
f, g = m.LLL()[0]


def Decryption(f, g, e, q):
    a = f * e % q
    m = inverse(f, g) * a % g
    print(long_to_bytes(m))


Decryption(f, g, e, q)
